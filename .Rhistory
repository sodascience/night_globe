sky_brightness~1,
gan_penn
)
# Estimate a spherical model for the variogram
mod_vario_empty <- fit.variogram(
emp_vario_empty,
vgm(psill = 1, "Sph", nugget = 1),
fit.method = 2
)
grid_pred_empty <- krige(
formula   = sky_brightness ~ 1,
locations = gan_penn %>% st_jitter(0.00001),
newdata   = gan_grid %>% mutate(geometry = st_centroid(geometry), cloud_cover = "clear"),
model     = mod_vario_empty,
nmax      = 1,
debug.level = -1
)
grid_pred_empty
gan_grid %>%
mutate(pred = grid_pred_empty$var1.pred, var = grid_pred_empty$var1.var) %>%
ggplot() +
geom_sf(color = NA, mapping = aes(fill = pred)) +
geom_sf(data = gan_penn, mapping = aes(colour = sky_brightness)) +
scale_fill_viridis_c(direction = -1, limits = c(1, 7)) +
scale_colour_viridis_c(direction = -1)
ggsave("img/empty plot just using nightglobe observations.png")
##########
#kriging with only cloud cover
# Create an empirical variogram
emp_vario_cc <- variogram(
sky_brightness~cloud_cover+moon_illumination+sun_altitude,
gan_penn
)
# Estimate a spherical model for the variogram
mod_vario_cc <- fit.variogram(
emp_vario_cc,
vgm(psill = 1.5, "Sph", nugget = 1),
fit.method = 2
)
# perform kriging
grid_pred_cc <- krige(
formula   = sky_brightness ~ cloud_cover,
locations = gan_penn %>% st_jitter(0.00001),
newdata   = gan_grid %>% mutate(geometry = st_centroid(geometry), cloud_cover = "clear",
moon_illumination=0,sun_altitude=-1),
model     = mod_vario_cc,
nmax      = 200,
debug.level = -1
)
gan_grid %>%
mutate(pred = grid_pred_cc$var1.pred, var = grid_pred_cc$var1.var) %>%
ggplot() +
geom_sf(color = NA, mapping = aes(fill = pred)) +
geom_sf(data = gan_penn, mapping = aes(colour = sky_brightness)) +
scale_fill_viridis_c(direction = -1, limits = c(1, 7)) +
scale_colour_viridis_c(direction = -1)
# With observations
gan_grid_means %>%
mutate(pred = grid_pred_cc$var1.pred, var = grid_pred_cc$var1.var) %>%
ggplot() +
geom_sf(color = NA, mapping = aes(fill = gan_grid_means$grid_mean)) +
geom_sf(data = gan_penn_means, mapping = aes(colour = sky_brightness)) +
labs(fill = "grid_mean") +
scale_fill_viridis_c(direction = -1, limits = c(1, 7)) + #put them on the same scale
scale_colour_viridis_c(direction = -1)
# Only the averaged squares in the grid, without the observations
gan_grid_means %>%
mutate(pred = grid_pred_cc$var1.pred, var = grid_pred_cc$var1.var) %>%
ggplot() +
geom_sf(color = NA, mapping = aes(fill = gan_grid_means$grid_mean)) +
labs(fill = "grid_mean") +
scale_fill_viridis_c(direction = -1, limits = c(1, 7)) + #scale needs to be like this, otherwise some boxes stay grey
scale_colour_viridis_c(direction = -1)
ggsave("img/plot just cloud sun moon.png")
##########################
# A model with motorway covariates
emp_vario_cov <- variogram(sky_brightness~motorway_1km+motorway_25km+motorway_10km, gan_penn)
plot(emp_vario_cov)
# Estimate a spherical model for the variogram
mod_vario_cov <- fit.variogram(
emp_vario_cov,
vgm(psill = 1.5, "Sph", nugget = 1),
#  fit.method = 2
)
# Now krige with the motorways
grid_pred_cov <- krige(
formula   = sky_brightness ~cloud_cover+motorway_10km,
locations = gan_penn %>% st_jitter(0.00001),
newdata   = gan_grid %>% mutate(geometry = st_centroid(geometry), cloud_cover = "clear"),
model     = mod_vario_cov,
nmax      = 100,
debug.level = -1
) # warnings about singular values
# and make a plot
gan_grid %>%
mutate(pred = grid_pred_cov$var1.pred, var = grid_pred_cov$var1.var) %>%
ggplot() +
geom_sf(color = NA, mapping = aes(fill = pred)) +
geom_sf(data = gan_penn, mapping = aes(colour = sky_brightness)) +
scale_fill_viridis_c(direction = -1, limits = c(0, 7)) +
scale_colour_viridis_c(direction = -1)
ggsave("img/plot clouds+ motorways_10km.png")
##### A model with only primary roads
emp_vario_cov <- variogram(sky_brightness~secondary_10km, gan_penn)
plot(emp_vario_cov)
# Estimate a spherical model for the variogram
mod_vario_cov <- fit.variogram(
emp_vario_cov,
vgm(psill = 1.5, "Sph", nugget = 1),
#  fit.method = 2
)
# Now krige with the motorways
grid_pred_primary <- krige(
formula   = sky_brightness ~cloud_cover+primary_10km,
locations = gan_penn %>% st_jitter(0.00001),
newdata   = gan_grid %>% mutate(geometry = st_centroid(geometry), cloud_cover = "clear"),
model     = mod_vario_cov,
nmax      = 100,
debug.level = -1
) # warnings about singular values
# and make a plot
gan_grid %>%
mutate(pred = grid_pred_primary$var1.pred, var = grid_pred_cov$var1.var) %>%
ggplot() +
geom_sf(color = NA, mapping = aes(fill = pred)) +
geom_sf(data = gan_penn, mapping = aes(colour = sky_brightness)) +
scale_fill_viridis_c(direction = -1, limits = c(0, 7)) +
scale_colour_viridis_c(direction = -1)
ggsave("img/plot clouds+ secondary_10km.png")
##########################
# A model with motorways10_km and other primary roads, without sun/moon correction
emp_vario_cov <- variogram(sky_brightness~motorway_10km+primary_10km+secondary_10km, gan_penn)
plot(emp_vario_cov)
# Estimate a spherical model for the variogram
mod_vario_cov <- fit.variogram(
emp_vario_cov,
vgm(psill = 1.5, "Sph", nugget = 1),
#  fit.method = 2
)
# Now krige with the roads
grid_pred_roads <- krige(
formula   = sky_brightness ~cloud_cover+motorway_10km+primary_10km+secondary_10km,
locations = gan_penn %>% st_jitter(0.00001),
newdata   = gan_grid %>% mutate(geometry = st_centroid(geometry), cloud_cover = "clear"),
model     = mod_vario_cov,
nmax      = 100,
debug.level = -1
) # warnings about singular values
# and make a plot
gan_grid %>%
mutate(pred = grid_pred_roads$var1.pred, var = grid_pred_cov$var1.var) %>%
ggplot() +
geom_sf(color = NA, mapping = aes(fill = pred)) +
geom_sf(data = gan_penn, mapping = aes(colour = sky_brightness)) +
scale_fill_viridis_c(direction = -1, limits=c(1,7)) +
scale_colour_viridis_c(direction = -1)
ggsave("img/plot with clouds multiple roads.png")
# and a plot without observatrions, and no scale
gan_grid %>%
mutate(pred = grid_pred_roads$var1.pred, var = grid_pred_cov$var1.var) %>%
ggplot() +
geom_sf(color = NA, mapping = aes(fill = pred)) +
# geom_sf(data = gan_penn, mapping = aes(colour = sky_brightness)) +
scale_fill_viridis_c(direction = -1, limits=c(0,7)) +
theme(legend.position="none")
#  scale_colour_viridis_c(direction = -1)
ggsave("img/plot with clouds multiple roads only predictions.png")
##########################
# A model with only tertiary roads
emp_vario_cov <- variogram(sky_brightness~tertiary_1km+tertiary_10km+tertiary_25km, gan_penn)
plot(emp_vario_cov)
# Estimate a spherical model for the variogram
mod_vario_cov <- fit.variogram(
emp_vario_cov,
vgm(psill = 1.5, "Sph", nugget = 1),
#  fit.method = 2
)
# Now krige with the roads
grid_pred_cov <- krige(
formula   = sky_brightness ~cloud_cover+tertiary_25km,
locations = gan_penn %>% st_jitter(0.00001),
newdata   = gan_grid %>% mutate(geometry = st_centroid(geometry), cloud_cover = "clear"),
model     = mod_vario_cov,
nmax      = 100,
debug.level = -1
) # warnings about singular values
##########################
# A model with motorways and industry
emp_vario_cov <- variogram(sky_brightness~motorway_10km+industrial_10km, gan_penn)
plot(emp_vario_cov)
# Estimate a spherical model for the variogram
mod_vario_cov <- fit.variogram(
emp_vario_cov,
vgm(psill = 1.5, "Sph", nugget = 1.5),
#  fit.method = 2
)
# Now krige with the roads
grid_pred_industry <- krige(
formula   = sky_brightness ~cloud_cover+motorway_10km+industrial_10km,
locations = gan_penn %>% st_jitter(0.00001),
newdata   = gan_grid %>% mutate(geometry = st_centroid(geometry), cloud_cover = "clear"),
model     = mod_vario_cov,
nmax      = 100,
debug.level = -1
) # warnings about singular values
# and make a plot
gan_grid %>%
mutate(pred = grid_pred_industry$var1.pred, var = grid_pred_cov$var1.var) %>%
ggplot() +
geom_sf(color = NA, mapping = aes(fill = pred)) +
geom_sf(data = gan_penn, mapping = aes(colour = sky_brightness)) +
scale_fill_viridis_c(direction = -1) +
scale_colour_viridis_c(direction = -1)
#### calculate the correlation
gan_grid_means$empty <- grid_pred_cc$var1.pred
gan_grid_means$motorway <- grid_pred_cov$var1.pred
gan_grid_means$primary <- grid_pred_primary$var1.pred
gan_grid_means$roads <- grid_pred_roads$var1.pred
# correlation with radiance
cor.test(method="spearman",gan_grid_means$empty,gan_grid_means$radiance)
cor.test(method="spearman",gan_grid_means$motorway,gan_grid_means$radiance)
cor.test(method="spearman",gan_grid_means$primary,gan_grid_means$radiance)
cor.test(method="spearman",gan_grid_means$roads,gan_grid_means$radiance)
plot(gan_grid_means$pred,gan_grid_means$radiance)
# corewlation with skyglow
cor.test(method="spearman",gan_grid_means$empty,gan_grid_means$skyglow)
cor.test(method="spearman",gan_grid_means$motorway,gan_grid_means$skyglow)
cor.test(method="spearman",gan_grid_means$roads,gan_grid_means$skyglow)
# first try, just an LM
test1 <- lm(sky_brightness ~ factor(cloud_cover, ordered=FALSE)+sun_altitude+moon_illumination,data=gan_penn)
summary(test1)
# add the geoms
qplot(gan_penn$buildings_10km,gan_penn$sky_brightness)
qplot(gan_penn$buildings_10km)
test2 <- lm(sky_brightness ~ cloud_cover+sun_altitude+moon_illumination
+motorway_1km+motorway_10km+motorway_25km
+log(1+buildings_1km)+log(1+buildings_10km)+log(1+buildings_20km)
,data=gan_penn)
summary(test2)
# just add the close buildings
test3 <- lm(sky_brightness ~ cloud_cover+sun_altitude+moon_illumination
+motorway_10km
+buildings_10km
,data=gan_penn)
summary(test3)
# use a lasso, the geoms are correlated
#define response variable
gan_penn_complete <- gan_penn[ !is.na(gan_penn$sky_brightness),]
y <- gan_penn_complete$sky_brightness
#define matrix of predictor variables
x <-  st_drop_geometry(gan_penn_complete)
x <-   data.matrix(x[, c('cloud_cover', 'sun_altitude', 'moon_illumination',
'motorway_1km', 'motorway_10km', 'motorway_25km',
'buildings_1km', 'buildings_10km', 'buildings_20km')])
cv_model <- cv.glmnet(x, y, alpha = 1)
best_lambda <- cv_model$lambda.min
best_lambda
x <-   data.matrix(x[, c('cloud_cover', 'sun_altitude', 'moon_illumination',
'motorway_1km', 'motorway_10km', 'motorway_25km',
'buildings_1km', 'buildings_10km', 'buildings_20km')])
cv_model <- cv.glmnet(x, y, alpha = 1)
best_lambda <- cv_model$lambda.min
best_lambda
#produce plot of test MSE by lambda value
plot(cv_model)
best_model <- glmnet(x, y, alpha = 1, lambda = best_lambda)
coef(best_model)
# A model without kriging
emp_vario_empty <- variogram(
sky_brightness~1,
gan_penn
)
# Estimate a spherical model for the variogram
mod_vario_empty <- fit.variogram(
emp_vario_empty,
vgm(psill = 1, "Sph", nugget = 1),
fit.method = 2
)
grid_pred_empty <- krige(
formula   = sky_brightness ~ 1,
locations = gan_penn %>% st_jitter(0.00001),
newdata   = gan_grid %>% mutate(geometry = st_centroid(geometry), cloud_cover = "clear"),
model     = mod_vario_empty,
nmax      = 1,
debug.level = -1
)
install.packaes("stars")
install.packages("stars")
grid_pred_empty <- krige(
formula   = sky_brightness ~ 1,
locations = gan_penn %>% st_jitter(0.00001),
newdata   = gan_grid %>% mutate(geometry = st_centroid(geometry), cloud_cover = "clear"),
model     = mod_vario_empty,
nmax      = 1,
debug.level = -1
)
grid_pred_empty
gan_grid %>%
mutate(pred = grid_pred_empty$var1.pred, var = grid_pred_empty$var1.var) %>%
ggplot() +
geom_sf(color = NA, mapping = aes(fill = pred)) +
geom_sf(data = gan_penn, mapping = aes(colour = sky_brightness)) +
scale_fill_viridis_c(direction = -1, limits = c(1, 7)) +
scale_colour_viridis_c(direction = -1)
ggsave("img/empty plot just using nightglobe observations.png")
# Create an empirical variogram
emp_vario_cc <- variogram(
sky_brightness~cloud_cover+moon_illumination+sun_altitude,
gan_penn
)
# Estimate a spherical model for the variogram
mod_vario_cc <- fit.variogram(
emp_vario_cc,
vgm(psill = 1.5, "Sph", nugget = 1),
fit.method = 2
)
# perform kriging
grid_pred_cc <- krige(
formula   = sky_brightness ~ cloud_cover,
locations = gan_penn %>% st_jitter(0.00001),
newdata   = gan_grid %>% mutate(geometry = st_centroid(geometry), cloud_cover = "clear",
moon_illumination=0,sun_altitude=-1),
model     = mod_vario_cc,
nmax      = 200,
debug.level = -1
)
gan_grid %>%
mutate(pred = grid_pred_cc$var1.pred, var = grid_pred_cc$var1.var) %>%
ggplot() +
geom_sf(color = NA, mapping = aes(fill = pred)) +
geom_sf(data = gan_penn, mapping = aes(colour = sky_brightness)) +
scale_fill_viridis_c(direction = -1, limits = c(1, 7)) +
scale_colour_viridis_c(direction = -1)
# With observations
gan_grid_means %>%
mutate(pred = grid_pred_cc$var1.pred, var = grid_pred_cc$var1.var) %>%
ggplot() +
geom_sf(color = NA, mapping = aes(fill = gan_grid_means$grid_mean)) +
geom_sf(data = gan_penn_means, mapping = aes(colour = sky_brightness)) +
labs(fill = "grid_mean") +
scale_fill_viridis_c(direction = -1, limits = c(1, 7)) + #put them on the same scale
scale_colour_viridis_c(direction = -1)
# Only the averaged squares in the grid, without the observations
gan_grid_means %>%
mutate(pred = grid_pred_cc$var1.pred, var = grid_pred_cc$var1.var) %>%
ggplot() +
geom_sf(color = NA, mapping = aes(fill = gan_grid_means$grid_mean)) +
labs(fill = "grid_mean") +
scale_fill_viridis_c(direction = -1, limits = c(1, 7)) + #scale needs to be like this, otherwise some boxes stay grey
scale_colour_viridis_c(direction = -1)
ggsave("img/plot just cloud sun moon.png")
emp_vario_cov <- variogram(sky_brightness~motorway_1km+motorway_25km+motorway_10km, gan_penn)
plot(emp_vario_cov)
# Estimate a spherical model for the variogram
mod_vario_cov <- fit.variogram(
emp_vario_cov,
vgm(psill = 1.5, "Sph", nugget = 1),
#  fit.method = 2
)
# Now krige with the motorways
grid_pred_cov <- krige(
formula   = sky_brightness ~cloud_cover+motorway_10km,
locations = gan_penn %>% st_jitter(0.00001),
newdata   = gan_grid %>% mutate(geometry = st_centroid(geometry), cloud_cover = "clear"),
model     = mod_vario_cov,
nmax      = 100,
debug.level = -1
) # warnings about singular values
# and make a plot
gan_grid %>%
mutate(pred = grid_pred_cov$var1.pred, var = grid_pred_cov$var1.var) %>%
ggplot() +
geom_sf(color = NA, mapping = aes(fill = pred)) +
geom_sf(data = gan_penn, mapping = aes(colour = sky_brightness)) +
scale_fill_viridis_c(direction = -1, limits = c(0, 7)) +
scale_colour_viridis_c(direction = -1)
ggsave("img/plot clouds+ motorways_10km.png")
emp_vario_cov <- variogram(sky_brightness~secondary_10km, gan_penn)
plot(emp_vario_cov)
# Estimate a spherical model for the variogram
mod_vario_cov <- fit.variogram(
emp_vario_cov,
vgm(psill = 1.5, "Sph", nugget = 1),
#  fit.method = 2
)
# Now krige with the motorways
grid_pred_primary <- krige(
formula   = sky_brightness ~cloud_cover+primary_10km,
locations = gan_penn %>% st_jitter(0.00001),
newdata   = gan_grid %>% mutate(geometry = st_centroid(geometry), cloud_cover = "clear"),
model     = mod_vario_cov,
nmax      = 100,
debug.level = -1
) # warnings about singular values
# and make a plot
gan_grid %>%
mutate(pred = grid_pred_primary$var1.pred, var = grid_pred_cov$var1.var) %>%
ggplot() +
geom_sf(color = NA, mapping = aes(fill = pred)) +
geom_sf(data = gan_penn, mapping = aes(colour = sky_brightness)) +
scale_fill_viridis_c(direction = -1, limits = c(0, 7)) +
scale_colour_viridis_c(direction = -1)
ggsave("img/plot clouds+ secondary_10km.png")
##########################
# A model with motorways10_km and other primary roads, without sun/moon correction
emp_vario_cov <- variogram(sky_brightness~motorway_10km+primary_10km+secondary_10km, gan_penn)
plot(emp_vario_cov)
# Estimate a spherical model for the variogram
mod_vario_cov <- fit.variogram(
emp_vario_cov,
vgm(psill = 1.5, "Sph", nugget = 1),
#  fit.method = 2
)
# Now krige with the roads
grid_pred_roads <- krige(
formula   = sky_brightness ~cloud_cover+motorway_10km+primary_10km+secondary_10km,
locations = gan_penn %>% st_jitter(0.00001),
newdata   = gan_grid %>% mutate(geometry = st_centroid(geometry), cloud_cover = "clear"),
model     = mod_vario_cov,
nmax      = 100,
debug.level = -1
) # warnings about singular values
# and make a plot
gan_grid %>%
mutate(pred = grid_pred_roads$var1.pred, var = grid_pred_cov$var1.var) %>%
ggplot() +
geom_sf(color = NA, mapping = aes(fill = pred)) +
geom_sf(data = gan_penn, mapping = aes(colour = sky_brightness)) +
scale_fill_viridis_c(direction = -1, limits=c(1,7)) +
scale_colour_viridis_c(direction = -1)
ggsave("img/plot with clouds multiple roads.png")
# and a plot without observatrions, and no scale
gan_grid %>%
mutate(pred = grid_pred_roads$var1.pred, var = grid_pred_cov$var1.var) %>%
ggplot() +
geom_sf(color = NA, mapping = aes(fill = pred)) +
# geom_sf(data = gan_penn, mapping = aes(colour = sky_brightness)) +
scale_fill_viridis_c(direction = -1, limits=c(0,7)) +
theme(legend.position="none")
#  scale_colour_viridis_c(direction = -1)
ggsave("img/plot with clouds multiple roads only predictions.png")
##########################
# A model with only tertiary roads
emp_vario_cov <- variogram(sky_brightness~tertiary_1km+tertiary_10km+tertiary_25km, gan_penn)
plot(emp_vario_cov)
# Estimate a spherical model for the variogram
mod_vario_cov <- fit.variogram(
emp_vario_cov,
vgm(psill = 1.5, "Sph", nugget = 1),
#  fit.method = 2
)
# Now krige with the roads
grid_pred_cov <- krige(
formula   = sky_brightness ~cloud_cover+tertiary_25km,
locations = gan_penn %>% st_jitter(0.00001),
newdata   = gan_grid %>% mutate(geometry = st_centroid(geometry), cloud_cover = "clear"),
model     = mod_vario_cov,
nmax      = 100,
debug.level = -1
) # warnings about singular values
##########################
# A model with motorways and industry
emp_vario_cov <- variogram(sky_brightness~motorway_10km+industrial_10km, gan_penn)
plot(emp_vario_cov)
# Estimate a spherical model for the variogram
mod_vario_cov <- fit.variogram(
emp_vario_cov,
vgm(psill = 1.5, "Sph", nugget = 1.5),
#  fit.method = 2
)
# Now krige with the roads
grid_pred_industry <- krige(
formula   = sky_brightness ~cloud_cover+motorway_10km+industrial_10km,
locations = gan_penn %>% st_jitter(0.00001),
newdata   = gan_grid %>% mutate(geometry = st_centroid(geometry), cloud_cover = "clear"),
model     = mod_vario_cov,
nmax      = 100,
debug.level = -1
) # warnings about singular values
# and make a plot
gan_grid %>%
mutate(pred = grid_pred_industry$var1.pred, var = grid_pred_cov$var1.var) %>%
ggplot() +
geom_sf(color = NA, mapping = aes(fill = pred)) +
geom_sf(data = gan_penn, mapping = aes(colour = sky_brightness)) +
scale_fill_viridis_c(direction = -1) +
scale_colour_viridis_c(direction = -1)
#### calculate the correlation
gan_grid_means$empty <- grid_pred_cc$var1.pred
gan_grid_means$motorway <- grid_pred_cov$var1.pred
gan_grid_means$primary <- grid_pred_primary$var1.pred
gan_grid_means$roads <- grid_pred_roads$var1.pred
# correlation with radiance
cor.test(method="spearman",gan_grid_means$empty,gan_grid_means$radiance)
cor.test(method="spearman",gan_grid_means$motorway,gan_grid_means$radiance)
cor.test(method="spearman",gan_grid_means$primary,gan_grid_means$radiance)
cor.test(method="spearman",gan_grid_means$roads,gan_grid_means$radiance)
plot(gan_grid_means$pred,gan_grid_means$radiance)
# corewlation with skyglow
cor.test(method="spearman",gan_grid_means$empty,gan_grid_means$skyglow)
cor.test(method="spearman",gan_grid_means$motorway,gan_grid_means$skyglow)
cor.test(method="spearman",gan_grid_means$roads,gan_grid_means$skyglow)
# and a plot without observatrions, and no scale
gan_grid %>%
mutate(pred = grid_pred_cov$var1.pred, var = grid_pred_cov$var1.var) %>%
ggplot() +
geom_sf(color = NA, mapping = aes(fill = pred)) +
# geom_sf(data = gan_penn, mapping = aes(colour = sky_brightness)) +
scale_fill_viridis_c(direction = -1, limits=c(0,7)) +
theme(legend.position="none")
#  scale_colour_viridis_c(direction = -1)
ggsave("img/plot with clouds only tertiary roads.png")
